/*! AdminLTE app.js
 * ================
 * Main JS application file for AdminLTE v2. This file
 * should be included in all pages. It controls some layout
 * options and implements exclusive AdminLTE plugins.
 *
 * @Author  Almsaeed Studio
 * @Support <http://www.almsaeedstudio.com>
 * @Email   <abdullah@almsaeedstudio.com>
 * @version 2.3.6
 * @license MIT <http://opensource.org/licenses/MIT>
 */
//Make sure jQuery has been loaded before app.js
/* ----------------------------------
 * - Initialize the AdminLTE Object -
 * ----------------------------------
 * All AdminLTE functions are implemented below.
 */
function _init(){"use strict";/* Layout
   * ======
   * Fixes the layout height in case min-height fails.
   *
   * @type Object
   * @usage $.AdminLTE.layout.activate()
   *        $.AdminLTE.layout.fix()
   *        $.AdminLTE.layout.fixSidebar()
   */
$.AdminLTE.layout={activate:function(){var a=this;a.fix(),a.fixSidebar(),$(window,".wrapper").resize(function(){a.fix(),a.fixSidebar()})},fix:function(){
//Get window height and the wrapper height
var a=$(".main-header").outerHeight()+$(".main-footer").outerHeight(),b=$(window).height(),c=$(".sidebar").height();
//Set the min-height of the content and sidebar based on the
//the height of the document.
if($("body").hasClass("fixed"))$(".content-wrapper, .right-side").css("min-height",b-$(".main-footer").outerHeight());else{var d;b>=c?($(".content-wrapper, .right-side").css("min-height",b-a),d=b-a):($(".content-wrapper, .right-side").css("min-height",c),d=c);
//Fix for the control sidebar height
var e=$($.AdminLTE.options.controlSidebarOptions.selector);void 0!==e&&e.height()>d&&$(".content-wrapper, .right-side").css("min-height",e.height())}},fixSidebar:function(){
//Make sure the body tag has the .fixed class
if(!$("body").hasClass("fixed"))return void(void 0!==$.fn.slimScroll&&$(".sidebar").slimScroll({destroy:!0}).height("auto"));void 0===$.fn.slimScroll&&window.console&&window.console.error("Error: the fixed layout requires the slimscroll plugin!"),
//Enable slimscroll for fixed layout
$.AdminLTE.options.sidebarSlimScroll&&void 0!==$.fn.slimScroll&&(
//Destroy if it exists
$(".sidebar").slimScroll({destroy:!0}).height("auto"),
//Add slimscroll
$(".sidebar").slimscroll({height:$(window).height()-$(".main-header").height()+"px",color:"rgba(0,0,0,0.2)",size:"3px"}))}},/* PushMenu()
   * ==========
   * Adds the push menu functionality to the sidebar.
   *
   * @type Function
   * @usage: $.AdminLTE.pushMenu("[data-toggle='offcanvas']")
   */
$.AdminLTE.pushMenu={activate:function(a){
//Get the screen sizes
var b=$.AdminLTE.options.screenSizes;
//Enable sidebar toggle
$(document).on("click",a,function(a){a.preventDefault(),
//Enable sidebar push menu
$(window).width()>b.sm-1?$("body").hasClass("sidebar-collapse")?$("body").removeClass("sidebar-collapse").trigger("expanded.pushMenu"):$("body").addClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").hasClass("sidebar-open")?$("body").removeClass("sidebar-open").removeClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").addClass("sidebar-open").trigger("expanded.pushMenu")}),$(".content-wrapper").click(function(){
//Enable hide menu when clicking on the content-wrapper on small screens
$(window).width()<=b.sm-1&&$("body").hasClass("sidebar-open")&&$("body").removeClass("sidebar-open")}),
//Enable expand on hover for sidebar mini
($.AdminLTE.options.sidebarExpandOnHover||$("body").hasClass("fixed")&&$("body").hasClass("sidebar-mini"))&&this.expandOnHover()},expandOnHover:function(){var a=this,b=$.AdminLTE.options.screenSizes.sm-1;
//Expand sidebar on hover
$(".main-sidebar").hover(function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-collapse")&&$(window).width()>b&&a.expand()},function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-expanded-on-hover")&&$(window).width()>b&&a.collapse()})},expand:function(){$("body").removeClass("sidebar-collapse").addClass("sidebar-expanded-on-hover")},collapse:function(){$("body").hasClass("sidebar-expanded-on-hover")&&$("body").removeClass("sidebar-expanded-on-hover").addClass("sidebar-collapse")}},/* Tree()
   * ======
   * Converts the sidebar into a multilevel
   * tree view menu.
   *
   * @type Function
   * @Usage: $.AdminLTE.tree('.sidebar')
   */
$.AdminLTE.tree=function(a){var b=this,c=$.AdminLTE.options.animationSpeed;$(document).off("click",a+" li a").on("click",a+" li a",function(a){
//Get the clicked link and the next element
var d=$(this),e=d.next();
//Check if the next element is a menu and is visible
if(e.is(".treeview-menu")&&e.is(":visible")&&!$("body").hasClass("sidebar-collapse"))
//Close the menu
e.slideUp(c,function(){e.removeClass("menu-open")}),e.parent("li").removeClass("active");else if(e.is(".treeview-menu")&&!e.is(":visible")){
//Get the parent menu
var f=d.parents("ul").first(),g=f.find("ul:visible").slideUp(c);
//Remove the menu-open class from the parent
g.removeClass("menu-open");
//Get the parent li
var h=d.parent("li");
//Open the target menu and add the menu-open class
e.slideDown(c,function(){
//Add the class active to the parent li
e.addClass("menu-open"),f.find("li.active").removeClass("active"),h.addClass("active"),
//Fix the layout in case the sidebar stretches over the height of the window
b.layout.fix()})}
//if this isn't a link, prevent the page from being redirected
e.is(".treeview-menu")&&a.preventDefault()})},/* ControlSidebar
   * ==============
   * Adds functionality to the right sidebar
   *
   * @type Object
   * @usage $.AdminLTE.controlSidebar.activate(options)
   */
$.AdminLTE.controlSidebar={
//instantiate the object
activate:function(){
//Get the object
var a=this,b=$.AdminLTE.options.controlSidebarOptions,c=$(b.selector);
//Listen to the click event
$(b.toggleBtnSelector).on("click",function(d){d.preventDefault(),
//If the sidebar is not open
c.hasClass("control-sidebar-open")||$("body").hasClass("control-sidebar-open")?a.close(c,b.slide):
//Open the sidebar
a.open(c,b.slide)});
//If the body has a boxed layout, fix the sidebar bg position
var d=$(".control-sidebar-bg");a._fix(d),
//If the body has a fixed layout, make the control sidebar fixed
$("body").hasClass("fixed")?a._fixForFixed(c):
//If the content height is less than the sidebar's height, force max height
$(".content-wrapper, .right-side").height()<c.height()&&a._fixForContent(c)},
//Open the control sidebar
open:function(a,b){
//Slide over content
b?a.addClass("control-sidebar-open"):
//Push the content by adding the open class to the body instead
//of the sidebar itself
$("body").addClass("control-sidebar-open")},
//Close the control sidebar
close:function(a,b){b?a.removeClass("control-sidebar-open"):$("body").removeClass("control-sidebar-open")},_fix:function(a){var b=this;if($("body").hasClass("layout-boxed")){if(a.css("position","absolute"),a.height($(".wrapper").height()),b.hasBindedResize)return;$(window).resize(function(){b._fix(a)}),b.hasBindedResize=!0}else a.css({position:"fixed",height:"auto"})},_fixForFixed:function(a){a.css({position:"fixed","max-height":"100%",overflow:"auto","padding-bottom":"50px"})},_fixForContent:function(a){$(".content-wrapper, .right-side").css("min-height",a.height())}},/* BoxWidget
   * =========
   * BoxWidget is a plugin to handle collapsing and
   * removing boxes from the screen.
   *
   * @type Object
   * @usage $.AdminLTE.boxWidget.activate()
   *        Set all your options in the main $.AdminLTE.options object
   */
$.AdminLTE.boxWidget={selectors:$.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,icons:$.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,animationSpeed:$.AdminLTE.options.animationSpeed,activate:function(a){var b=this;a||(a=document),
//Listen for collapse event triggers
$(a).on("click",b.selectors.collapse,function(a){a.preventDefault(),b.collapse($(this))}),
//Listen for remove event triggers
$(a).on("click",b.selectors.remove,function(a){a.preventDefault(),b.remove($(this))})},collapse:function(a){var b=this,c=a.parents(".box").first(),d=c.find("> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer");c.hasClass("collapsed-box")?(
//Convert plus into minus
a.children(":first").removeClass(b.icons.open).addClass(b.icons.collapse),
//Show the content
d.slideDown(b.animationSpeed,function(){c.removeClass("collapsed-box")})):(
//Convert minus into plus
a.children(":first").removeClass(b.icons.collapse).addClass(b.icons.open),
//Hide the content
d.slideUp(b.animationSpeed,function(){c.addClass("collapsed-box")}))},remove:function(a){a.parents(".box").first().slideUp(this.animationSpeed)}}}if("undefined"==typeof jQuery)throw new Error("AdminLTE requires jQuery");/* AdminLTE
 *
 * @type Object
 * @description $.AdminLTE is the main object for the template's app.
 *              It's used for implementing functions and options related
 *              to the template. Keeping everything wrapped in an object
 *              prevents conflict with other plugins and is a better
 *              way to organize our code.
 */
$.AdminLTE={},/* --------------------
 * - AdminLTE Options -
 * --------------------
 * Modify these options to suit your implementation
 */
$.AdminLTE.options={
//Add slimscroll to navbar menus
//This requires you to load the slimscroll plugin
//in every page before app.js
navbarMenuSlimscroll:!0,navbarMenuSlimscrollWidth:"3px",//The width of the scroll bar
navbarMenuHeight:"200px",//The height of the inner menu
//General animation speed for JS animated elements such as box collapse/expand and
//sidebar treeview slide up/down. This options accepts an integer as milliseconds,
//'fast', 'normal', or 'slow'
animationSpeed:500,
//Sidebar push menu toggle button selector
sidebarToggleSelector:"[data-toggle='offcanvas']",
//Activate sidebar push menu
sidebarPushMenu:!0,
//Activate sidebar slimscroll if the fixed layout is set (requires SlimScroll Plugin)
sidebarSlimScroll:!0,
//Enable sidebar expand on hover effect for sidebar mini
//This option is forced to true if both the fixed layout and sidebar mini
//are used together
sidebarExpandOnHover:!1,
//BoxRefresh Plugin
enableBoxRefresh:!0,
//Bootstrap.js tooltip
enableBSToppltip:!0,BSTooltipSelector:"[data-toggle='tooltip']",
//Enable Fast Click. Fastclick.js creates a more
//native touch experience with touch devices. If you
//choose to enable the plugin, make sure you load the script
//before AdminLTE's app.js
enableFastclick:!1,
//Control Sidebar Options
enableControlSidebar:!0,controlSidebarOptions:{
//Which button should trigger the open/close event
toggleBtnSelector:"[data-toggle='control-sidebar']",
//The sidebar selector
selector:".control-sidebar",
//Enable slide over content
slide:!0},
//Box Widget Plugin. Enable this plugin
//to allow boxes to be collapsed and/or removed
enableBoxWidget:!0,
//Box Widget plugin options
boxWidgetOptions:{boxWidgetIcons:{
//Collapse icon
collapse:"fa-minus",
//Open icon
open:"fa-plus",
//Remove icon
remove:"fa-times"},boxWidgetSelectors:{
//Remove button selector
remove:'[data-widget="remove"]',
//Collapse button selector
collapse:'[data-widget="collapse"]'}},
//Direct Chat plugin options
directChat:{
//Enable direct chat by default
enable:!0,
//The button to open and close the chat contacts pane
contactToggleSelector:'[data-widget="chat-pane-toggle"]'},
//Define the set of colors to use globally around the website
colors:{lightBlue:"#3c8dbc",red:"#f56954",green:"#00a65a",aqua:"#00c0ef",yellow:"#f39c12",blue:"#0073b7",navy:"#001F3F",teal:"#39CCCC",olive:"#3D9970",lime:"#01FF70",orange:"#FF851B",fuchsia:"#F012BE",purple:"#8E24AA",maroon:"#D81B60",black:"#222222",gray:"#d2d6de"},
//The standard screen sizes that bootstrap uses.
//If you change these in the variables.less file, change
//them here too.
screenSizes:{xs:480,sm:768,md:992,lg:1200}},/* ------------------
 * - Implementation -
 * ------------------
 * The next block of code implements AdminLTE's
 * functions and plugins as specified by the
 * options above.
 */
$(function(){"use strict";
//Fix for IE page transitions
$("body").removeClass("hold-transition"),
//Extend options if external options exist
"undefined"!=typeof AdminLTEOptions&&$.extend(!0,$.AdminLTE.options,AdminLTEOptions);
//Easy access to options
var a=$.AdminLTE.options;
//Set up the object
_init(),
//Activate the layout maker
$.AdminLTE.layout.activate(),
//Enable sidebar tree view controls
$.AdminLTE.tree(".sidebar"),
//Enable control sidebar
a.enableControlSidebar&&$.AdminLTE.controlSidebar.activate(),
//Add slimscroll to navbar dropdown
a.navbarMenuSlimscroll&&void 0!==$.fn.slimscroll&&$(".navbar .menu").slimscroll({height:a.navbarMenuHeight,alwaysVisible:!1,size:a.navbarMenuSlimscrollWidth}).css("width","100%"),
//Activate sidebar push menu
a.sidebarPushMenu&&$.AdminLTE.pushMenu.activate(a.sidebarToggleSelector),
//Activate Bootstrap tooltip
a.enableBSToppltip&&$("body").tooltip({selector:a.BSTooltipSelector}),
//Activate box widget
a.enableBoxWidget&&$.AdminLTE.boxWidget.activate(),
//Activate fast click
a.enableFastclick&&"undefined"!=typeof FastClick&&FastClick.attach(document.body),
//Activate direct chat widget
a.directChat.enable&&$(document).on("click",a.directChat.contactToggleSelector,function(){$(this).parents(".direct-chat").first().toggleClass("direct-chat-contacts-open")}),/*
   * INITIALIZE BUTTON TOGGLE
   * ------------------------
   */
$('.btn-group[data-toggle="btn-toggle"]').each(function(){var a=$(this);$(this).find(".btn").on("click",function(b){a.find(".btn.active").removeClass("active"),$(this).addClass("active"),b.preventDefault()})})}),/* ------------------
 * - Custom Plugins -
 * ------------------
 * All custom plugins are defined below.
 */
/*
 * BOX REFRESH BUTTON
 * ------------------
 * This is a custom plugin to use with the component BOX. It allows you to add
 * a refresh button to the box. It converts the box's state to a loading state.
 *
 * @type plugin
 * @usage $("#box-widget").boxRefresh( options );
 */
function(a){"use strict";a.fn.boxRefresh=function(b){function c(a){
//Add overlay and loading img
a.append(f),e.onLoadStart.call(a)}function d(a){
//Remove overlay and loading img
a.find(f).remove(),e.onLoadDone.call(a)}
// Render options
var e=a.extend({
//Refresh button selector
trigger:".refresh-btn",
//File source to be loaded (e.g: ajax/src.php)
source:"",
//Callbacks
onLoadStart:function(a){return a},//Right after the button has been clicked
onLoadDone:function(a){return a}},b),f=a('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>');return this.each(function(){
//if a source is specified
if(""===e.source)return void(window.console&&window.console.log("Please specify a source first - boxRefresh()"));
//the box
var b=a(this);
//On trigger click
b.find(e.trigger).first().on("click",function(a){a.preventDefault(),
//Add loading overlay
c(b),
//Perform ajax call
b.find(".box-body").load(e.source,function(){d(b)})})})}}(jQuery),/*
 * EXPLICIT BOX CONTROLS
 * -----------------------
 * This is a custom plugin to use with the component BOX. It allows you to activate
 * a box inserted in the DOM after the app.js was loaded, toggle and remove box.
 *
 * @type plugin
 * @usage $("#box-widget").activateBox();
 * @usage $("#box-widget").toggleBox();
 * @usage $("#box-widget").removeBox();
 */
function(a){"use strict";a.fn.activateBox=function(){a.AdminLTE.boxWidget.activate(this)},a.fn.toggleBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.collapse,this);a.AdminLTE.boxWidget.collapse(b)},a.fn.removeBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.remove,this);a.AdminLTE.boxWidget.remove(b)}}(jQuery),/*
 * TODO LIST CUSTOM PLUGIN
 * -----------------------
 * This plugin depends on iCheck plugin for checkbox and radio inputs
 *
 * @type plugin
 * @usage $("#todo-widget").todolist( options );
 */
function(a){"use strict";a.fn.todolist=function(b){
// Render options
var c=a.extend({
//When the user checks the input
onCheck:function(a){return a},
//When the user unchecks the input
onUncheck:function(a){return a}},b);return this.each(function(){void 0!==a.fn.iCheck?(a("input",this).on("ifChecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onCheck.call(b)}),a("input",this).on("ifUnchecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onUncheck.call(b)})):a("input",this).on("change",function(){var b=a(this).parents("li").first();b.toggleClass("done"),a("input",b).is(":checked")?c.onCheck.call(b):c.onUncheck.call(b)})})}}(jQuery);