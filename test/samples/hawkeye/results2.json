[
  {
    "module": {
      "key": "contents",
      "name": "File Contents",
      "description": "Scans files for dangerous content",
      "enabled": true
    },
    "results": {
      "high": [],
      "medium": [],
      "low": [],
      "critical": [
        {
          "code": "contents-2",
          "offender": "some_file_with_private_key_in.md",
          "description": "Private key in file",
          "mitigation": "Check line number: 1",
          "data": {
            "code": 2,
            "extension": [
              "js",
              "json",
              "xml",
              "text",
              "rb",
              "py",
              "sh",
              "md"
            ],
            "content": {},
            "caption": "Private key in file",
            "level": "critical"
          }
        }
      ]
    }
  },
  {
    "module": {
      "key": "files",
      "name": "Secret Files",
      "description": "Scans for known secret files",
      "enabled": true
    },
    "results": {
      "high": [
        {
          "code": "files-41",
          "offender": "keyring",
          "description": "GNOME Keyring database file",
          "mitigation": "Check contents of the file",
          "data": {
            "code": 40,
            "part": "extension",
            "type": "regex",
            "pattern": {},
            "caption": "GNOME Keyring database file",
            "level": "high",
            "description": null
          }
        }
      ],
      "medium": [
        {
          "code": "files-57",
          "offender": "gem/credentials",
          "description": "Rubygems credentials file",
          "mitigation": "Might contain API key for a rubygems.org account.",
          "data": {
            "code": 56,
            "part": "path",
            "type": "regex",
            "pattern": {},
            "caption": "Rubygems credentials file",
            "level": "medium",
            "description": "Might contain API key for a rubygems.org account."
          }
        }
      ],
      "low": [
        {
          "code": "files-49",
          "offender": "some_file_with_private_key_in.md",
          "description": "Contains words: private, key",
          "mitigation": "Check contents of the file",
          "data": {
            "code": 48,
            "part": "filename",
            "type": "regex",
            "pattern": {},
            "caption": "Contains words: private, key",
            "level": "low",
            "description": null
          }
        }
      ],
      "critical": [
        {
          "code": "files-6",
          "offender": "cert.pem",
          "description": "Potential cryptographic private key",
          "mitigation": "Check contents of the file",
          "data": {
            "code": 5,
            "part": "extension",
            "type": "match",
            "pattern": "pem",
            "caption": "Potential cryptographic private key",
            "level": "critical",
            "description": null
          }
        },
        {
          "code": "files-1",
          "offender": "id_rsa",
          "description": "Private SSH key",
          "mitigation": "Check contents of the file",
          "data": {
            "code": 1,
            "part": "filename",
            "type": "regex",
            "pattern": {},
            "caption": "Private SSH key",
            "level": "critical",
            "description": null
          }
        },
        {
          "code": "files-1",
          "offender": "regex_rsa",
          "description": "Private SSH key",
          "mitigation": "Check contents of the file",
          "data": {
            "code": 1,
            "part": "filename",
            "type": "regex",
            "pattern": {},
            "caption": "Private SSH key",
            "level": "critical",
            "description": null
          }
        }
      ]
    }
  },
  {
    "module": {
      "key": "ncu",
      "name": "Node Check Updates",
      "description": "Scans a package.json for out of date packages",
      "enabled": true
    },
    "results": {
      "high": [
        {
          "code": "ncu-1",
          "offender": "nodemailer",
          "description": "Module is one or more major versions out of date",
          "mitigation": "Update to 4.0.1",
          "data": {
            "module": "nodemailer",
            "original": "^2.6.4",
            "updated": "^4.0.1"
          }
        }
      ],
      "medium": [
        {
          "code": "ncu-1",
          "offender": "body-parser",
          "description": "Module is one or more minor versions out of date",
          "mitigation": "Update to 1.17.1",
          "data": {
            "module": "body-parser",
            "original": "~1.15.1",
            "updated": "~1.17.1"
          }
        },
        {
          "code": "ncu-1",
          "offender": "debug",
          "description": "Module is one or more minor versions out of date",
          "mitigation": "Update to 2.6.3",
          "data": {
            "module": "debug",
            "original": "~2.2.0",
            "updated": "~2.6.3"
          }
        },
        {
          "code": "ncu-1",
          "offender": "express",
          "description": "Module is one or more minor versions out of date",
          "mitigation": "Update to 4.15.2",
          "data": {
            "module": "express",
            "original": "~4.13.4",
            "updated": "~4.15.2"
          }
        },
        {
          "code": "ncu-1",
          "offender": "morgan",
          "description": "Module is one or more minor versions out of date",
          "mitigation": "Update to 1.8.1",
          "data": {
            "module": "morgan",
            "original": "~1.7.0",
            "updated": "~1.8.1"
          }
        },
        {
          "code": "ncu-1",
          "offender": "serve-favicon",
          "description": "Module is one or more minor versions out of date",
          "mitigation": "Update to 2.4.2",
          "data": {
            "module": "serve-favicon",
            "original": "~2.3.0",
            "updated": "~2.4.2"
          }
        }
      ],
      "low": [],
      "critical": []
    }
  },
  {
    "module": {
      "key": "nsp",
      "name": "Node Security Project",
      "description": "Scans a package.json for known vulnerabilities from NSP",
      "enabled": true
    },
    "results": {
      "high": [
        {
          "code": "nsp-106",
          "offender": "negotiator",
          "description": "Regular Expression Denial of Service",
          "mitigation": "https://nodesecurity.io/advisories/106",
          "data": {
            "stdout": "",
            "stderr": "[\n  {\n    \"id\": 106,\n    \"updated_at\": \"2016-06-16T20:37:24.000Z\",\n    \"created_at\": \"2016-05-04T16:34:12.000Z\",\n    \"publish_date\": \"2016-06-16T17:36:06.000Z\",\n    \"overview\": \"negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa.\\n\\nThe header for \\\"Accept-Language\\\", when parsed by negotiator is vulnerable to Regular Expression Denial of Service via a specially crafted string. \\n\\nTimeline\\n\\n- April 29th 2016 - Initial report to maintainers\\n- April 29th 2016 - Confirm receipt from maintainers\\n- May 1st 2016 - Fix confirmed\\n- May 5th 2016 - 0.6.1 published with fix\\n- June 16th 2016 - Advisory published (delay was to coordinate fixes in upstream frameworks, Koa and Express)\",\n    \"recommendation\": \"Upgrade to at least version 0.6.1\\n\\nExpress users should update to Express 4.14.0 or greater. If you want to see if you are using a vulnerable call,  a quick grep for the `acceptsLanguages` function call in your application will tell you if you are using this functionality.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\",\n    \"cvss_score\": 7.5,\n    \"module\": \"negotiator\",\n    \"version\": \"0.5.3\",\n    \"vulnerable_versions\": \"<= 0.6.0\",\n    \"patched_versions\": \">= 0.6.1\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"express@4.13.4\",\n      \"accepts@1.2.13\",\n      \"negotiator@0.5.3\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/106\"\n  },\n  {\n    \"id\": 48,\n    \"updated_at\": \"2016-04-21T00:15:04.000Z\",\n    \"created_at\": \"2015-10-24T17:58:34.232Z\",\n    \"publish_date\": \"2015-10-24T21:01:32.155Z\",\n    \"overview\": \"uglify-js is vulnerable to regular expression denial of service (ReDoS) when certain types of input is passed into .parse().\\n\\n\\\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\\\" [1]\\n\\n### Proof of Concept\\n\\n```\\nvar u = require('uglify-js');\\nvar genstr = function (len, chr) {\\n    var result = \\\"\\\";\\n    for (i=0; i<=len; i++) {\\n        result = result + chr;\\n    }\\n\\n    return result;\\n}\\n\\nu.parse(\\\"var a = \\\" + genstr(process.argv[2], \\\"1\\\") + \\\".1ee7;\\\");\\n```\\n\\n### Results\\n```\\n$ time node test.js 10000\\nreal\\t0m1.091s\\nuser\\t0m1.047s\\nsys\\t0m0.039s\\n\\n$ time node test.js 80000\\nreal\\t0m6.486s\\nuser\\t0m6.229s\\nsys\\t0m0.094s\\n```\",\n    \"recommendation\": \"Update to version 2.6.0 or later\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L\",\n    \"cvss_score\": 5.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<2.6.0\",\n    \"patched_versions\": \">=2.6.0\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/48\"\n  },\n  {\n    \"id\": 39,\n    \"updated_at\": \"2016-04-28T17:22:23.000Z\",\n    \"created_at\": \"2015-10-17T19:41:46.382Z\",\n    \"publish_date\": \"2015-08-24T19:29:10.000Z\",\n    \"overview\": \"[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\\n\\n\\n### Details:\\n\\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\\nIn Javascript form, they state that:\\n !(a && b) === (!a) || (!b)\\n !(a || b) === (!a) && (!b)\\n\\nThe law does not hold true when one of the values is not a boolean however.\\n\\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\\n\\nConsider this authentication function:\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft =\\n        !!config && // config object exists\\n        !!user.token && // user object has a token\\n        !user.token.invalidated && // token is not explicitly invalidated\\n        !config.uninitialized && // config is initialized\\n        !config.ignoreTimestamps && // don't ignore timestamps\\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\\n\\n    // The token must not be expired\\n    return timeLeft > 0;\\n}\\n\\nfunction getTimeLeft(expiry) {\\n  return expiry - getSystemTime();\\n}\\n```\\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\\n\\n( Formatted for readability )\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft = !(                       // negation\\n        !config                             // config object does not exist\\n        || !user.token                      // user object does not have a token\\n        || user.token.invalidated           // token is explicitly invalidated\\n        || config.uninitialized             // config isn't initialized\\n        || config.ignoreTimestamps          // ignore timestamps\\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\\n    );\\n    return timeLeft > 0\\n}\\n\\nfunction getTimeLeft(expiry) {\\n    return expiry - getSystemTime()\\n}\\n```\",\n    \"recommendation\": \"Upgrade UglifyJS to version >= 2.4.24.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L\",\n    \"cvss_score\": 8.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<= 2.4.23\",\n    \"patched_versions\": \">= 2.4.24\",\n    \"title\": \"Incorrect Handling of Non-Boolean Comparisons During Minification\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/39\"\n  }\n]",
            "code": 1
          }
        }
      ],
      "medium": [
        {
          "code": "nsp-48",
          "offender": "uglify-js",
          "description": "Regular Expression Denial of Service",
          "mitigation": "https://nodesecurity.io/advisories/48",
          "data": {
            "stdout": "",
            "stderr": "[\n  {\n    \"id\": 106,\n    \"updated_at\": \"2016-06-16T20:37:24.000Z\",\n    \"created_at\": \"2016-05-04T16:34:12.000Z\",\n    \"publish_date\": \"2016-06-16T17:36:06.000Z\",\n    \"overview\": \"negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa.\\n\\nThe header for \\\"Accept-Language\\\", when parsed by negotiator is vulnerable to Regular Expression Denial of Service via a specially crafted string. \\n\\nTimeline\\n\\n- April 29th 2016 - Initial report to maintainers\\n- April 29th 2016 - Confirm receipt from maintainers\\n- May 1st 2016 - Fix confirmed\\n- May 5th 2016 - 0.6.1 published with fix\\n- June 16th 2016 - Advisory published (delay was to coordinate fixes in upstream frameworks, Koa and Express)\",\n    \"recommendation\": \"Upgrade to at least version 0.6.1\\n\\nExpress users should update to Express 4.14.0 or greater. If you want to see if you are using a vulnerable call,  a quick grep for the `acceptsLanguages` function call in your application will tell you if you are using this functionality.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\",\n    \"cvss_score\": 7.5,\n    \"module\": \"negotiator\",\n    \"version\": \"0.5.3\",\n    \"vulnerable_versions\": \"<= 0.6.0\",\n    \"patched_versions\": \">= 0.6.1\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"express@4.13.4\",\n      \"accepts@1.2.13\",\n      \"negotiator@0.5.3\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/106\"\n  },\n  {\n    \"id\": 48,\n    \"updated_at\": \"2016-04-21T00:15:04.000Z\",\n    \"created_at\": \"2015-10-24T17:58:34.232Z\",\n    \"publish_date\": \"2015-10-24T21:01:32.155Z\",\n    \"overview\": \"uglify-js is vulnerable to regular expression denial of service (ReDoS) when certain types of input is passed into .parse().\\n\\n\\\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\\\" [1]\\n\\n### Proof of Concept\\n\\n```\\nvar u = require('uglify-js');\\nvar genstr = function (len, chr) {\\n    var result = \\\"\\\";\\n    for (i=0; i<=len; i++) {\\n        result = result + chr;\\n    }\\n\\n    return result;\\n}\\n\\nu.parse(\\\"var a = \\\" + genstr(process.argv[2], \\\"1\\\") + \\\".1ee7;\\\");\\n```\\n\\n### Results\\n```\\n$ time node test.js 10000\\nreal\\t0m1.091s\\nuser\\t0m1.047s\\nsys\\t0m0.039s\\n\\n$ time node test.js 80000\\nreal\\t0m6.486s\\nuser\\t0m6.229s\\nsys\\t0m0.094s\\n```\",\n    \"recommendation\": \"Update to version 2.6.0 or later\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L\",\n    \"cvss_score\": 5.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<2.6.0\",\n    \"patched_versions\": \">=2.6.0\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/48\"\n  },\n  {\n    \"id\": 39,\n    \"updated_at\": \"2016-04-28T17:22:23.000Z\",\n    \"created_at\": \"2015-10-17T19:41:46.382Z\",\n    \"publish_date\": \"2015-08-24T19:29:10.000Z\",\n    \"overview\": \"[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\\n\\n\\n### Details:\\n\\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\\nIn Javascript form, they state that:\\n !(a && b) === (!a) || (!b)\\n !(a || b) === (!a) && (!b)\\n\\nThe law does not hold true when one of the values is not a boolean however.\\n\\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\\n\\nConsider this authentication function:\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft =\\n        !!config && // config object exists\\n        !!user.token && // user object has a token\\n        !user.token.invalidated && // token is not explicitly invalidated\\n        !config.uninitialized && // config is initialized\\n        !config.ignoreTimestamps && // don't ignore timestamps\\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\\n\\n    // The token must not be expired\\n    return timeLeft > 0;\\n}\\n\\nfunction getTimeLeft(expiry) {\\n  return expiry - getSystemTime();\\n}\\n```\\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\\n\\n( Formatted for readability )\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft = !(                       // negation\\n        !config                             // config object does not exist\\n        || !user.token                      // user object does not have a token\\n        || user.token.invalidated           // token is explicitly invalidated\\n        || config.uninitialized             // config isn't initialized\\n        || config.ignoreTimestamps          // ignore timestamps\\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\\n    );\\n    return timeLeft > 0\\n}\\n\\nfunction getTimeLeft(expiry) {\\n    return expiry - getSystemTime()\\n}\\n```\",\n    \"recommendation\": \"Upgrade UglifyJS to version >= 2.4.24.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L\",\n    \"cvss_score\": 8.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<= 2.4.23\",\n    \"patched_versions\": \">= 2.4.24\",\n    \"title\": \"Incorrect Handling of Non-Boolean Comparisons During Minification\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/39\"\n  }\n]",
            "code": 1
          }
        }
      ],
      "low": [],
      "critical": [
        {
          "code": "nsp-39",
          "offender": "uglify-js",
          "description": "Incorrect Handling of Non-Boolean Comparisons During Minification",
          "mitigation": "https://nodesecurity.io/advisories/39",
          "data": {
            "stdout": "",
            "stderr": "[\n  {\n    \"id\": 106,\n    \"updated_at\": \"2016-06-16T20:37:24.000Z\",\n    \"created_at\": \"2016-05-04T16:34:12.000Z\",\n    \"publish_date\": \"2016-06-16T17:36:06.000Z\",\n    \"overview\": \"negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa.\\n\\nThe header for \\\"Accept-Language\\\", when parsed by negotiator is vulnerable to Regular Expression Denial of Service via a specially crafted string. \\n\\nTimeline\\n\\n- April 29th 2016 - Initial report to maintainers\\n- April 29th 2016 - Confirm receipt from maintainers\\n- May 1st 2016 - Fix confirmed\\n- May 5th 2016 - 0.6.1 published with fix\\n- June 16th 2016 - Advisory published (delay was to coordinate fixes in upstream frameworks, Koa and Express)\",\n    \"recommendation\": \"Upgrade to at least version 0.6.1\\n\\nExpress users should update to Express 4.14.0 or greater. If you want to see if you are using a vulnerable call,  a quick grep for the `acceptsLanguages` function call in your application will tell you if you are using this functionality.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\",\n    \"cvss_score\": 7.5,\n    \"module\": \"negotiator\",\n    \"version\": \"0.5.3\",\n    \"vulnerable_versions\": \"<= 0.6.0\",\n    \"patched_versions\": \">= 0.6.1\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"express@4.13.4\",\n      \"accepts@1.2.13\",\n      \"negotiator@0.5.3\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/106\"\n  },\n  {\n    \"id\": 48,\n    \"updated_at\": \"2016-04-21T00:15:04.000Z\",\n    \"created_at\": \"2015-10-24T17:58:34.232Z\",\n    \"publish_date\": \"2015-10-24T21:01:32.155Z\",\n    \"overview\": \"uglify-js is vulnerable to regular expression denial of service (ReDoS) when certain types of input is passed into .parse().\\n\\n\\\"The Regular expression Denial of Service (ReDoS) is a Denial of Service attack, that exploits the fact that most Regular Expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). An attacker can then cause a program using a Regular Expression to enter these extreme situations and then hang for a very long time.\\\" [1]\\n\\n### Proof of Concept\\n\\n```\\nvar u = require('uglify-js');\\nvar genstr = function (len, chr) {\\n    var result = \\\"\\\";\\n    for (i=0; i<=len; i++) {\\n        result = result + chr;\\n    }\\n\\n    return result;\\n}\\n\\nu.parse(\\\"var a = \\\" + genstr(process.argv[2], \\\"1\\\") + \\\".1ee7;\\\");\\n```\\n\\n### Results\\n```\\n$ time node test.js 10000\\nreal\\t0m1.091s\\nuser\\t0m1.047s\\nsys\\t0m0.039s\\n\\n$ time node test.js 80000\\nreal\\t0m6.486s\\nuser\\t0m6.229s\\nsys\\t0m0.094s\\n```\",\n    \"recommendation\": \"Update to version 2.6.0 or later\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L\",\n    \"cvss_score\": 5.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<2.6.0\",\n    \"patched_versions\": \">=2.6.0\",\n    \"title\": \"Regular Expression Denial of Service\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/48\"\n  },\n  {\n    \"id\": 39,\n    \"updated_at\": \"2016-04-28T17:22:23.000Z\",\n    \"created_at\": \"2015-10-17T19:41:46.382Z\",\n    \"publish_date\": \"2015-08-24T19:29:10.000Z\",\n    \"overview\": \"[Tom MacWright](https://github.com/mishoo/UglifyJS2/issues/751) discovered that UglifyJS versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted Javascript file to have altered functionality after minification. This bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [Yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\\n\\n\\n### Details:\\n\\nIn Boolean algebra, DeMorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\\nIn Javascript form, they state that:\\n !(a && b) === (!a) || (!b)\\n !(a || b) === (!a) && (!b)\\n\\nThe law does not hold true when one of the values is not a boolean however.\\n\\nVulnerable versions of UglifyJS do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\\n\\nConsider this authentication function:\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft =\\n        !!config && // config object exists\\n        !!user.token && // user object has a token\\n        !user.token.invalidated && // token is not explicitly invalidated\\n        !config.uninitialized && // config is initialized\\n        !config.ignoreTimestamps && // don't ignore timestamps\\n        getTimeLeft(user.token.expiry); // > 0 if expiration is in the future\\n\\n    // The token must not be expired\\n    return timeLeft > 0;\\n}\\n\\nfunction getTimeLeft(expiry) {\\n  return expiry - getSystemTime();\\n}\\n```\\nWhen minified with a vulnerable version of UglifyJS, it will produce the following insecure output, where a token will never expire:\\n\\n( Formatted for readability )\\n\\n```\\nfunction isTokenValid(user) {\\n    var timeLeft = !(                       // negation\\n        !config                             // config object does not exist\\n        || !user.token                      // user object does not have a token\\n        || user.token.invalidated           // token is explicitly invalidated\\n        || config.uninitialized             // config isn't initialized\\n        || config.ignoreTimestamps          // ignore timestamps\\n        || !getTimeLeft(user.token.expiry)  // > 0 if expiration is in the future\\n    );\\n    return timeLeft > 0\\n}\\n\\nfunction getTimeLeft(expiry) {\\n    return expiry - getSystemTime()\\n}\\n```\",\n    \"recommendation\": \"Upgrade UglifyJS to version >= 2.4.24.\",\n    \"cvss_vector\": \"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L\",\n    \"cvss_score\": 8.3,\n    \"module\": \"uglify-js\",\n    \"version\": \"2.2.5\",\n    \"vulnerable_versions\": \"<= 2.4.23\",\n    \"patched_versions\": \">= 2.4.24\",\n    \"title\": \"Incorrect Handling of Non-Boolean Comparisons During Minification\",\n    \"path\": [\n      \"vulnerable-app@0.0.0\",\n      \"jade@1.11.0\",\n      \"transformers@2.1.0\",\n      \"uglify-js@2.2.5\"\n    ],\n    \"advisory\": \"https://nodesecurity.io/advisories/39\"\n  }\n]",
            "code": 1
          }
        }
      ]
    }
  }
]
